% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anon.R
\name{anon}
\alias{anon}
\title{Anonymize sensitive information in R objects}
\usage{
anon(
  x,
  pattern_list = list(),
  default_replacement = "**REDACTED**",
  check_approximate = TRUE,
  max_distance = 2,
  df_variable_names = NULL,
  df_classes = NULL,
  check_names = TRUE,
  check_labels = TRUE,
  .self = FALSE
)
}
\arguments{
\item{x}{The object to anonymize. Can be a character vector, factor, data frame, or list.}

\item{pattern_list}{A list of patterns to search for and replace. Can include:
\itemize{
\item Named elements where names are replacement values and values are one or more patterns to match
\item Unnamed elements where one or more patterns are replaced with \code{default_replacement}
}}

\item{default_replacement}{Value to use as the default replacement value when no specific replacement
is provided. Default is \code{"**REDACTED**"}.}

\item{check_approximate}{Logical indicating whether to check for approximate
matches using string distance. Default is \code{TRUE}.}

\item{max_distance}{Maximum string distance for approximate matching when
\code{check_approximate} is \code{TRUE}. Default is \code{2}.}

\item{df_variable_names}{For data frames, a character vector or named list
specifying which variable names should be anonymized:
\itemize{
\item Unnamed elements: variables are replaced with \code{default_replacement}
\item Named elements: variable names are keys, value can be either a replacement value or a function
}}

\item{df_classes}{For data frames, a character vector or named list specifying
which variable classes should be anonymized:
\itemize{
\item Unnamed elements: variables with matching classes are replaced with \code{default_replacement}
\item Named elements: class names are keys, value can be either a replacement value or a function
}}

\item{check_names}{Logical indicating whether to anonymize object names
(column names, row names, list names). Default is \code{TRUE}.}

\item{check_labels}{Logical indicating whether to anonymize labels (attributes).
Default is \code{TRUE}.}

\item{.self}{Logical for internal use in recursive calls. When \code{TRUE}, warnings
are collected as attributes instead of being issued immediately. Default is \code{FALSE}.}
}
\value{
An object of class \code{anon_context} with the same structure as \code{x} but with sensitive
information replaced. If approximate matches are found and \code{.self} is \code{FALSE}, warnings are issued.
If \code{.self} is \code{TRUE}, warnings are attached as an attribute.
}
\description{
This function anonymizes or redacts sensitive information from various R objects
including character vectors, factors, data frames, and lists. It uses pattern
matching to find and replace sensitive content, with options for targeted
anonymization based on variable names or classes and warnings about approximate matches.
}
\details{
\code{anon()} operates recursively on nested structures. For data frames:
\itemize{
\item Individual columns are processed based on their content
\item Entire columns can be replaced if specified in \code{df_variable_names} or \code{df_classes}
\item Column names, row names, and labels are anonymized when enabled
}

Pattern matching is case-insensitive. When \code{check_approximate} is enabled,
\code{anon()} will warn about remaining potential matches that are similar but not exact.

Replacement functions can be provided in \code{df_variable_names} and \code{df_classes} as:
\itemize{
\item R functions that take the column/variable as input
\item Formula notation (e.g., \code{~ .x + rnorm(length(.x), mean = 1)})
}

The returned object has class \code{anon_context} which allows it to be combined with other
anonymized objects using \code{c()}.
}
\examples{
# Basic string anonymization
text <- c("John Smith", "jane.doe@email.com", "Call 555-1234")
anon(text, pattern_list = c("John Smith", "@\\\\S+", "\\\\d{3}-\\\\d{4}"))

# Using named patterns for specific replacements
anon(text, pattern_list = list("PERSON" = "John Smith",
                               "EMAIL" = "@\\\\S+",
                               "PHONE" = "\\\\d{3}-\\\\d{4}"))

# Data frame anonymization
df <- data.frame(
  name = c("Alice", "Bob"),
  email = c("alice@test.com", "bob@test.com"),
  score = c(95, 87)
)

# Anonymize specific columns by name
anon(df, df_variable_names = c("name", "email"))

# Anonymize columns by class with custom replacements
anon(df, df_classes = list("character" = "HIDDEN"))

# Using functions for dynamic replacement
anon(df, df_variable_names = list("name" = ~ paste("Person", seq_along(.x))))

anon_df <- df |>
  anon(
    df_variable_names = list(
      "name" = ~ paste("Person", seq_along(.x)),
      "email"
    )
  )

# Combine anonymized objects
anon_summary <- anon_data_summary(list(df = df))
combined <- c(anon_df, anon_summary)
combined

}
